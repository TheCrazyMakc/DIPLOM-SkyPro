import allure
from pages2.Main_page_ui import BasePage 
from pages2.Search_by_name_ui import SearchPage 
from pages2.Add_to_cart_ui import AddCart 
from time import sleep
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager


class TestRunner:
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü"""
        self.driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
        self.base_page = BasePage(self.driver)
        self.search_page = SearchPage(self.driver)
        self.cart_page = AddCart(self.driver)
    
    @allure.step("–û—Ç–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    def open_page(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –ø–æ–ø–∞–ø"""
        try:
            self.base_page.open()        
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞ –∏ –ø–æ–ø–∞–ø –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
            allure.attach(self.driver.get_screenshot_as_png(), name="–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è", attachment_type=allure.attachment_type.PNG)
            return False

    @allure.step("–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é: {search_text}")
    def search_name(self, search_text="Python"):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"""
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –∏–∑ SearchPage –¥–ª—è –ø–æ–∏—Å–∫–∞
            self.search_page.enter_text_and_submit(search_text)
            
            # –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
            if self.search_page.wait_for_search_results():
                count = self.search_page.get_results_count()
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {count}")
                return count > 0
            else:
                print("‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")
            allure.attach(self.driver.get_screenshot_as_png(), name="–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞", attachment_type=allure.attachment_type.PNG)
            return False

    @allure.step("–ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–∑–∏–Ω—É")
    def go_to_cart(self):
        """–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É"""
        try:
            self.cart_page.enter_cart()
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—à–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –∫–æ—Ä–∑–∏–Ω—É: {e}")
            allure.attach(self.driver.get_screenshot_as_png(), name="–û—à–∏–±–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã", attachment_type=allure.attachment_type.PNG)
            return False

    @allure.step("–ü–æ–ª–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    def run_full_test(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        try:
            print("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è...")
            
            # –®–∞–≥ 1: –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            if not self.open_page():
                return False
            sleep(2)
            
            # –®–∞–≥ 2: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞
            if not self.search_name("–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ"):
                return False
            sleep(2)
            
            # –®–∞–≥ 3: –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–∑–∏–Ω—É
            if not self.go_to_cart():
                return False
            sleep(2)
            
            print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!")
            return True
            
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏: {e}")
            allure.attach(self.driver.get_screenshot_as_png(), name="–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞", attachment_type=allure.attachment_type.PNG)
            return False

    def close(self):
        """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä"""
        self.driver.quit()
        print("üîö –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç")


def open_page():
    """–û—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    runner = TestRunner()
    try:
        result = runner.open_page()
        return result
    finally:
        runner.close()


def search_name():
    """–û—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø–æ–∏—Å–∫–∞"""
    runner = TestRunner()
    try:
        # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        if runner.open_page():
            # –ó–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
            result = runner.search_name("JavaScript")
            return result
        return False
    finally:
        runner.close()


def full_test():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π"""
    runner = TestRunner()
    try:
        result = runner.run_full_test()
        return result
    finally:
        runner.close()


if __name__ == "__main__":
    # full_test()
    # –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –ø–æ–ª–Ω—ã–π —Ç–µ—Å—Ç
    
    print("1. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
    open_page()
    
    print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫:")
    search_name()
    
    print("\n3. –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ—Å—Ç:")
    full_test()